#!/bin/env node

const fs = require('fs')
const homedir = require('os').homedir()
const { exec } = require("child_process");
const arg = process.argv[2]

const basicPath = `${homedir}/Documents/`

console.log('To make this work. Trigger this script with "createfolders" as passed in argument')

// Folder structure
// dev
//   bin
//   production
//   debugging
//   sandbox
//     web
//       frontend
//       backend
//       fullstack
//     rdm
//       github
//     langs
//       c
//       'c++'
//       'c#'
//       java
//       python
//         python3
//       node

const fullPaths = {
  dev: 'dev',
  bin: 'dev/bin',
  production: 'dev/production',
  work: 'dev/work',
  debugging: 'dev/debugging',
  sandbox: 'dev/sandbox',
  web: 'dev/sandbox/web',
  frontend: 'dev/sandbox/web/frontend',
  backend: 'dev/sandbox/web/backend',
  fullstack: 'dev/sandbox/web/fullstack',
  rdm: 'dev/sandbox/rdm',
  github: 'dev/sandbox/rdm/github',
  langs: 'dev/sandbox/langs',
  c: 'dev/sandbox/langs/c',
  'c++': 'dev/sandbox/langs/c++',
  'c#': 'dev/sandbox/langs/c#',
  java: 'dev/sandbox/langs/java',
  python: 'dev/sandbox/langs/python',
  python3: 'dev/sandbox/langs/python/python3',
  node: 'dev/sandbox/langs/node'
}

const createFolder = (path) => {
  try {
    const dir = `${basicPath}${path}`
    fs.mkdirSync(dir)
    console.log(`${dir} was created!`)
  } catch (err) {
    console.log('Folder already exists')
  }
}

const createFolderStructure = () => {
  for (let i in fullPaths) {
    try {
      createFolder(fullPaths[i])
    } catch (err) {
      console.log(`File already exists, ${err}`)
    }
  }
}

const addToZshRC = () => {
  console.log('Add following lines to local .zshrc file')
  const prefix = 'p.'
  for (let i in fullPaths) {
   console.log(`alias ${prefix}${i}="cd ${basicPath}${fullPaths[i]} && pwd && echo Welcome to '${i}' development folder. Make some awesomeness. && echo && ls"`) 
  }
}

if (arg === 'createfolders') {
  createFolderStructure()
  addToZshRC()
}
